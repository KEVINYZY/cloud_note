<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.bianqi.note.mapper.NotebookMapper" >
  <resultMap id="BaseResultMap" type="org.bianqi.note.pojo.Notebook" >
    <id column="nb_id" property="nbId" jdbcType="BIGINT" />
    <result column="nb_name" property="nbName" jdbcType="VARCHAR" />
    <result column="nb_created" property="nbCreated" jdbcType="TIMESTAMP" />
    <result column="nb_status" property="nbStatus" jdbcType="INTEGER" />
    <result column="nb_list" property="nbList" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    nb_id, nb_name, nb_created, nb_status, nb_list, user_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.bianqi.note.pojo.NotebookExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from notebook
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from notebook
    where nb_id = #{nbId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from notebook
    where nb_id = #{nbId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.bianqi.note.pojo.NotebookExample" >
    delete from notebook
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.bianqi.note.pojo.Notebook" >
    insert into notebook (nb_id, nb_name, nb_created, 
      nb_status, nb_list, user_id
      )
    values (#{nbId,jdbcType=BIGINT}, #{nbName,jdbcType=VARCHAR}, #{nbCreated,jdbcType=TIMESTAMP}, 
      #{nbStatus,jdbcType=INTEGER}, #{nbList,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.bianqi.note.pojo.Notebook" >
    insert into notebook
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="nbId != null" >
        nb_id,
      </if>
      <if test="nbName != null" >
        nb_name,
      </if>
      <if test="nbCreated != null" >
        nb_created,
      </if>
      <if test="nbStatus != null" >
        nb_status,
      </if>
      <if test="nbList != null" >
        nb_list,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="nbId != null" >
        #{nbId,jdbcType=BIGINT},
      </if>
      <if test="nbName != null" >
        #{nbName,jdbcType=VARCHAR},
      </if>
      <if test="nbCreated != null" >
        #{nbCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="nbStatus != null" >
        #{nbStatus,jdbcType=INTEGER},
      </if>
      <if test="nbList != null" >
        #{nbList,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.bianqi.note.pojo.NotebookExample" resultType="java.lang.Integer" >
    select count(*) from notebook
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update notebook
    <set >
      <if test="record.nbId != null" >
        nb_id = #{record.nbId,jdbcType=BIGINT},
      </if>
      <if test="record.nbName != null" >
        nb_name = #{record.nbName,jdbcType=VARCHAR},
      </if>
      <if test="record.nbCreated != null" >
        nb_created = #{record.nbCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nbStatus != null" >
        nb_status = #{record.nbStatus,jdbcType=INTEGER},
      </if>
      <if test="record.nbList != null" >
        nb_list = #{record.nbList,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update notebook
    set nb_id = #{record.nbId,jdbcType=BIGINT},
      nb_name = #{record.nbName,jdbcType=VARCHAR},
      nb_created = #{record.nbCreated,jdbcType=TIMESTAMP},
      nb_status = #{record.nbStatus,jdbcType=INTEGER},
      nb_list = #{record.nbList,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.bianqi.note.pojo.Notebook" >
    update notebook
    <set >
      <if test="nbName != null" >
        nb_name = #{nbName,jdbcType=VARCHAR},
      </if>
      <if test="nbCreated != null" >
        nb_created = #{nbCreated,jdbcType=TIMESTAMP},
      </if>
      <if test="nbStatus != null" >
        nb_status = #{nbStatus,jdbcType=INTEGER},
      </if>
      <if test="nbList != null" >
        nb_list = #{nbList,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
    </set>
    where nb_id = #{nbId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.bianqi.note.pojo.Notebook" >
    update notebook
    set nb_name = #{nbName,jdbcType=VARCHAR},
      nb_created = #{nbCreated,jdbcType=TIMESTAMP},
      nb_status = #{nbStatus,jdbcType=INTEGER},
      nb_list = #{nbList,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR}
    where nb_id = #{nbId,jdbcType=BIGINT}
  </update>
</mapper>