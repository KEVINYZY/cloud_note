<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.bianqi.note.mapper.RecycleMapper" >
  <resultMap id="BaseResultMap" type="org.bianqi.note.pojo.Recycle" >
    <id column="recycle_id" property="recycleId" jdbcType="INTEGER" />
    <result column="recycle_note" property="recycleNote" jdbcType="VARCHAR" />
    <result column="recycle_create" property="recycleCreate" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="org.bianqi.note.pojo.Recycle" extends="BaseResultMap" >
    <result column="recycle_content" property="recycleContent" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    recycle_id, recycle_note, recycle_create, user_id
  </sql>
  <sql id="Blob_Column_List" >
    recycle_content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="org.bianqi.note.pojo.RecycleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from recycle
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.bianqi.note.pojo.RecycleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from recycle
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from recycle
    where recycle_id = #{recycleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from recycle
    where recycle_id = #{recycleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.bianqi.note.pojo.RecycleExample" >
    delete from recycle
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.bianqi.note.pojo.Recycle" >
    insert into recycle (recycle_id, recycle_note, recycle_create, 
      user_id, recycle_content)
    values (#{recycleId,jdbcType=INTEGER}, #{recycleNote,jdbcType=VARCHAR}, #{recycleCreate,jdbcType=TIMESTAMP}, 
      #{userId,jdbcType=VARCHAR}, #{recycleContent,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="org.bianqi.note.pojo.Recycle" >
    insert into recycle
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="recycleId != null" >
        recycle_id,
      </if>
      <if test="recycleNote != null" >
        recycle_note,
      </if>
      <if test="recycleCreate != null" >
        recycle_create,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="recycleContent != null" >
        recycle_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="recycleId != null" >
        #{recycleId,jdbcType=INTEGER},
      </if>
      <if test="recycleNote != null" >
        #{recycleNote,jdbcType=VARCHAR},
      </if>
      <if test="recycleCreate != null" >
        #{recycleCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="recycleContent != null" >
        #{recycleContent,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.bianqi.note.pojo.RecycleExample" resultType="java.lang.Integer" >
    select count(*) from recycle
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update recycle
    <set >
      <if test="record.recycleId != null" >
        recycle_id = #{record.recycleId,jdbcType=INTEGER},
      </if>
      <if test="record.recycleNote != null" >
        recycle_note = #{record.recycleNote,jdbcType=VARCHAR},
      </if>
      <if test="record.recycleCreate != null" >
        recycle_create = #{record.recycleCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.recycleContent != null" >
        recycle_content = #{record.recycleContent,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update recycle
    set recycle_id = #{record.recycleId,jdbcType=INTEGER},
      recycle_note = #{record.recycleNote,jdbcType=VARCHAR},
      recycle_create = #{record.recycleCreate,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=VARCHAR},
      recycle_content = #{record.recycleContent,jdbcType=LONGVARBINARY}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update recycle
    set recycle_id = #{record.recycleId,jdbcType=INTEGER},
      recycle_note = #{record.recycleNote,jdbcType=VARCHAR},
      recycle_create = #{record.recycleCreate,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.bianqi.note.pojo.Recycle" >
    update recycle
    <set >
      <if test="recycleNote != null" >
        recycle_note = #{recycleNote,jdbcType=VARCHAR},
      </if>
      <if test="recycleCreate != null" >
        recycle_create = #{recycleCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="recycleContent != null" >
        recycle_content = #{recycleContent,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where recycle_id = #{recycleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.bianqi.note.pojo.Recycle" >
    update recycle
    set recycle_note = #{recycleNote,jdbcType=VARCHAR},
      recycle_create = #{recycleCreate,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=VARCHAR},
      recycle_content = #{recycleContent,jdbcType=LONGVARBINARY}
    where recycle_id = #{recycleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.bianqi.note.pojo.Recycle" >
    update recycle
    set recycle_note = #{recycleNote,jdbcType=VARCHAR},
      recycle_create = #{recycleCreate,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=VARCHAR}
    where recycle_id = #{recycleId,jdbcType=INTEGER}
  </update>
</mapper>